SET(MULTITPS_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/MultiTPS/include)
SET(MULTITPS_INCLUDE ${MULTITPS_INCLUDE_DIR}/GMNR/MultiTPS.h)
SET(MULTITPS_SRC src/MultiTPS.cc)
SET(MULTITPS_FILES ${MULTITPS_INCLUDE} ${MULTITPS_SRC})

SET(COMMON_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/common/include)
SET(MATH_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/math/include)
SET(IO_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/io/include)
SET(TIME_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/time/include)
SET(TPS_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/TPS/include)
INCLUDE_DIRECTORIES(${EIGEN3_INCLUDE_DIR} 
	${COMMON_INCLUDE_DIR} 
	${MATH_INCLUDE_DIR} 
	${IO_INCLUDE_DIR}
	${TIME_INCLUDE_DIR}
	${TPS_INCLUDE_DIR}
	${MULTITPS_INCLUDE_DIR})

IF(GMNR_SHARED_LIBS)
	ADD_LIBRARY(multitps SHARED ${MULTITPS_FILES})
	SET_TARGET_PROPERTIES(multitps 
							PROPERTIES 
								OUTPUT_NAME "multitps" 
								CLEAN_DIRECT_OUTPUT 1 
								VERSION GMNR_VERSION)
	IF(CMAKE_HOST_WIN32)
		SET_TARGET_PROPERTIES(multitps 
								PROPERTIES 
									ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/lib"
									COMPILE_FLAGS "-DLIBMULTITPS_BUILD -DLIBMULTITPS_DYNAMIC")
	ENDIF(CMAKE_HOST_WIN32)
	ADD_DEPENDENCIES(multitps math io tps)
	LINK_DIRECTORIES(${PROJECT_BINARY_DIR}/lib)
	TARGET_LINK_LIBRARIES(multitps math io tps)
	INSTALL(TARGETS multitps
		RUNTIME DESTINATION bin  #.dll
		LIBRARY DESTINATION lib  #.so
		ARCHIVE DESTINATION lib) #.lib
ELSE(GMNR_SHARED_LIBS)
	ADD_LIBRARY(multitps_static STATIC ${MULTITPS_FILES})
	SET_TARGET_PROPERTIES(multitps_static 
							PROPERTIES 
								OUTPUT_NAME "multitps" 
								CLEAN_DIRECT_OUTPUT 1 
								VERSION GMNR_VERSION)
	IF(CMAKE_HOST_WIN32)
		INSTALL(TARGETS multitps_static ARCHIVE DESTINATION libstatic) #.lib
	ELSE(CMAKE_HOST_WIN32)
		INSTALL(TARGETS multitps_static ARCHIVE DESTINATION lib)       #.so
	ENDIF(CMAKE_HOST_WIN32)
ENDIF(GMNR_SHARED_LIBS)

INSTALL(FILES ${MULTITPS_INCLUDE} DESTINATION include/GMNR)


