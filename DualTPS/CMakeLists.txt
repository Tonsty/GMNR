SET(DUALTPS_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/DualTPS/include)
SET(DUALTPS_INCLUDE ${DUALTPS_INCLUDE_DIR}/GMNR/DualTPS.h)
SET(DUALTPS_SRC src/DualTPS.cc)
SET(DUALTPS_FILES ${DUALTPS_INCLUDE} ${DUALTPS_SRC})

SET(COMMON_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/common/include)
SET(MATH_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/math/include)
SET(TPS_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/TPS/include)
INCLUDE_DIRECTORIES(${EIGEN3_INCLUDE_DIR} 
	${COMMON_INCLUDE_DIR} 
	${MATH_INCLUDE_DIR} 
	${TPS_INCLUDE_DIR}
	${DUALTPS_INCLUDE_DIR})

IF(GMNR_SHARED_LIBS)
	ADD_LIBRARY(dualtps SHARED ${DUALTPS_FILES})
	SET_TARGET_PROPERTIES(dualtps 
							PROPERTIES 
								OUTPUT_NAME "dualtps"							 
								CLEAN_DIRECT_OUTPUT 1 
								VERSION GMNR_VERSION)
	IF(CMAKE_HOST_WIN32)
		SET_TARGET_PROPERTIES(dualtps 
								PROPERTIES 
									ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/lib"
									COMPILE_FLAGS "-DLIBDUALTPS_BUILD -DLIBDUALTPS_DYNAMIC")
	ENDIF(CMAKE_HOST_WIN32)
	ADD_DEPENDENCIES(dualtps math tps)
	LINK_DIRECTORIES(${PROJECT_BINARY_DIR}/lib)
	TARGET_LINK_LIBRARIES(dualtps math tps)
	INSTALL(TARGETS dualtps
		RUNTIME DESTINATION bin  #.dll
		LIBRARY DESTINATION lib  #.so
		ARCHIVE DESTINATION lib) #.lib
ELSE(GMNR_SHARED_LIBS)
	ADD_LIBRARY(dualtps_static STATIC ${DUALTPS_FILES})
	SET_TARGET_PROPERTIES(dualtps_static 
							PROPERTIES 
								OUTPUT_NAME "dualtps"							 
								CLEAN_DIRECT_OUTPUT 1 
								VERSION GMNR_VERSION)
	IF(CMAKE_HOST_WIN32)
		INSTALL(TARGETS dualtps_static ARCHIVE DESTINATION libstatic) #.lib
	ELSE(CMAKE_HOST_WIN32)
		INSTALL(TARGETS dualtps_static ARCHIVE DESTINATION lib)       #.so
	ENDIF(CMAKE_HOST_WIN32)	
ENDIF(GMNR_SHARED_LIBS)

INSTALL(FILES ${DUALTPS_INCLUDE} DESTINATION include/GMNR)


