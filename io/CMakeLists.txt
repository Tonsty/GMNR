SET(IO_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/io/include)
SET(IO_INCLUDE ${IO_INCLUDE_DIR}/GMNR/io/matrix_io.h)
SET(IO_SRC_DIR ${PROJECT_SOURCE_DIR}/io/src)
SET(IO_SRC ${IO_SRC_DIR}/matrix_io.cc)
SET(IO_FILES ${IO_INCLUDE} ${IO_SRC})

SET(COMMON_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/common/include)
INCLUDE_DIRECTORIES(${EIGEN3_INCLUDE_DIR} ${COMMON_INCLUDE_DIR} ${IO_INCLUDE_DIR})

IF(GMNR_SHARED_LIBS)
	ADD_LIBRARY(io SHARED ${IO_FILES})
	SET_TARGET_PROPERTIES(io 
							PROPERTIES 
								OUTPUT_NAME "io" 
								CLEAN_DIRECT_OUTPUT 1 
								VERSION GMNR_VERSION)
	IF(CMAKE_HOST_WIN32)
		SET_TARGET_PROPERTIES(io 
								PROPERTIES 
									ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/lib"
									COMPILE_FLAGS "-DLIBIO_BUILD -DLIBIO_DYNAMIC")
	ENDIF(CMAKE_HOST_WIN32)
	INSTALL(TARGETS io
			RUNTIME DESTINATION bin  #.dll
			LIBRARY DESTINATION lib  #.so
			ARCHIVE DESTINATION lib) #.lib
ELSE(GMNR_SHARED_LIBS)
	ADD_LIBRARY(io_static STATIC ${IO_FILES})
	SET_TARGET_PROPERTIES(io_static 
							PROPERTIES 
								OUTPUT_NAME "io" 
								CLEAN_DIRECT_OUTPUT 1 
								VERSION GMNR_VERSION)
	IF(CMAKE_HOST_WIN32)
		INSTALL(TARGETS io_static ARCHIVE DESTINATION libstatic) #.lib
	ELSE(CMAKE_HOST_WIN32)
		INSTALL(TARGETS io_static ARCHIVE DESTINATION lib)       #.so
	ENDIF(CMAKE_HOST_WIN32)	
ENDIF(GMNR_SHARED_LIBS)

INSTALL(DIRECTORY ${IO_INCLUDE_DIR}/ DESTINATION include)
#INSTALL(FILES ${IO_INCLUDE} DESTINATION include/GMNR)