SET(TPS_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/TPS/include)
SET(TPS_INCLUDE ${TPS_INCLUDE_DIR}/GMNR/ThinPlateSplines.h)
SET(TPS_SRC src/ThinPlateSplines.cc)
SET(TPS_FILES ${TPS_INCLUDE} ${TPS_SRC})

SET(COMMON_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/common/include)
SET(MATH_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/math/include)
SET(TIME_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/time/include)
INCLUDE_DIRECTORIES(${EIGEN3_INCLUDE_DIR} 
	${COMMON_INCLUDE_DIR} 
	${MATH_INCLUDE_DIR}
	${TIME_INCLUDE_DIR} 
	${TPS_INCLUDE_DIR})

IF(GMNR_SHARED_LIBS)
	ADD_LIBRARY(tps SHARED ${TPS_FILES})
	SET_TARGET_PROPERTIES(tps 
							PROPERTIES 
								OUTPUT_NAME "tps" 
								CLEAN_DIRECT_OUTPUT 1 
								VERSION GMNR_VERSION)
	IF(CMAKE_HOST_WIN32)
		SET_TARGET_PROPERTIES(tps 
								PROPERTIES 
									ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/lib"
									COMPILE_FLAGS "-DLIBTPS_BUILD -DLIBTPS_DYNAMIC")
	ENDIF(CMAKE_HOST_WIN32)
	ADD_DEPENDENCIES(tps math)
	LINK_DIRECTORIES(${PROJECT_BINARY_DIR}/lib)
	TARGET_LINK_LIBRARIES(tps math)
	INSTALL(TARGETS tps
			RUNTIME DESTINATION bin  #.dll
			LIBRARY DESTINATION lib  #.so
			ARCHIVE DESTINATION lib) #.lib
ELSE(GMNR_SHARED_LIBS)
	ADD_LIBRARY(tps_static STATIC ${TPS_FILES})
	SET_TARGET_PROPERTIES(tps_static 
							PROPERTIES 
								OUTPUT_NAME "tps" 
								CLEAN_DIRECT_OUTPUT 1 
								VERSION GMNR_VERSION)
	IF(CMAKE_HOST_WIN32)
		INSTALL(TARGETS tps_static ARCHIVE DESTINATION libstatic) #.lib
	ELSE(CMAKE_HOST_WIN32)
		INSTALL(TARGETS tps_static ARCHIVE DESTINATION lib)       #.so
	ENDIF(CMAKE_HOST_WIN32)	
ENDIF(GMNR_SHARED_LIBS)

INSTALL(DIRECTORY ${TPS_INCLUDE_DIR}/ DESTINATION include)
#INSTALL(FILES ${TPS_INCLUDE} DESTINATION include/GMNR)


